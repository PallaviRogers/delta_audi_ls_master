{
	"name": "pl_audi_environics",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata1",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_environics_src",
						"type": "DatasetReference",
						"parameters": {
							"src_directory": {
								"value": "@pipeline().parameters.src_path",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "SftpReadSettings",
						"recursive": true
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata1').output.childitems",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Get Metadata_file_type",
							"type": "GetMetadata",
							"dependsOn": [
								{
									"activity": "Set variable1",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "Set variable2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ds_environics_src",
									"type": "DatasetReference",
									"parameters": {
										"src_directory": {
											"value": "@concat(pipeline().parameters.src_path,item().name)",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"childItems"
								],
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							}
						},
						{
							"name": "Set variable1",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "var1",
								"value": {
									"value": "@concat(pipeline().parameters.src_path,item().name)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Filter1",
							"type": "Filter",
							"dependsOn": [
								{
									"activity": "Get Metadata_file_type",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"items": {
									"value": "@activity('Get Metadata_file_type').output.childitems",
									"type": "Expression"
								},
								"condition": {
									"value": "@contains(item().name,'CSV')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Filter1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greater(activity('Filter1').output.FilteredItemsCount,0)",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Copy data1",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "BinarySource",
												"storeSettings": {
													"type": "SftpReadSettings",
													"recursive": true,
													"wildcardFolderPath": {
														"value": "@variables('var1')",
														"type": "Expression"
													},
													"wildcardFileName": "*",
													"deleteFilesAfterCompletion": false
												},
												"formatSettings": {
													"type": "BinaryReadSettings"
												}
											},
											"sink": {
												"type": "BinarySink",
												"storeSettings": {
													"type": "AzureBlobStorageWriteSettings"
												}
											},
											"enableStaging": false,
											"skipErrorFile": {
												"fileMissing": false
											}
										},
										"inputs": [
											{
												"referenceName": "ds_environics_src",
												"type": "DatasetReference",
												"parameters": {
													"src_directory": {
														"value": "@concat(variables('var1'),'/CSV')",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "ds_audi_azure_blob_sink",
												"type": "DatasetReference",
												"parameters": {
													"directoryName": {
														"value": "@concat('raw_environics_lnd/',variables('var2'))",
														"type": "Expression"
													},
													"container_name": "raw"
												}
											}
										]
									}
								]
							}
						},
						{
							"name": "Set variable2",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "var2",
								"value": {
									"value": "@item().name",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"src_path": {
				"type": "string",
				"defaultValue": "fromEA/Rogers - Enterprise/1. Licensed Data/"
			}
		},
		"variables": {
			"var1": {
				"type": "String"
			},
			"var2": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2021-07-20T20:59:13Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}