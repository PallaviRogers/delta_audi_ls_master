{
	"name": "pl_gcs_s3_dfp_initial",
	"properties": {
		"description": "Copy Networkbackfillclicks files from google cloud storage(S3 bucket) to azure blob storage.",
		"activities": [
			{
				"name": "start_date_true",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "start_date",
					"value": "08/01/2020 12:00:00"
				}
			},
			{
				"name": "end_date_true",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "end_date",
					"value": "08/03/2020 12:00:00"
				}
			},
			{
				"name": "list_csv_files_initial_copy",
				"description": "list selected source file between start date and end date",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "start_date_true",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "end_date_true",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_audi_gcs_s3_src",
						"type": "DatasetReference",
						"parameters": {
							"container": "gdfp-7326",
							"fileName": {
								"value": "@concat(pipeline().parameters.filename,'*')",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "GoogleCloudStorageReadSettings",
						"recursive": true,
						"modifiedDatetimeStart": {
							"value": "@variables('start_date')",
							"type": "Expression"
						},
						"modifiedDatetimeEnd": {
							"value": "@variables('end_date')",
							"type": "Expression"
						}
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "If Condition1",
				"description": "count number of files  and if new files are present then list all files. ",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "list_csv_files_initial_copy",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greaterOrEquals(length(activity('list_csv_files_initial_copy').output.childItems),1)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "send_emails_if_no_files",
							"type": "DatabricksNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/dfp/send_email",
								"baseParameters": {
									"filename": {
										"value": "@pipeline().parameters.filename",
										"type": "Expression"
									},
									"pipeline_name": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"pipeline_id": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"source": {
										"value": "dfp",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_audi_databricks_v8x",
								"type": "LinkedServiceReference"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "list_csv_files_to_load",
							"description": "list all csv files to load",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ds_audi_gcs_s3_src",
									"type": "DatasetReference",
									"parameters": {
										"container": "gdfp-7326",
										"fileName": {
											"value": "@concat(pipeline().parameters.filename,'*')",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"childItems"
								],
								"storeSettings": {
									"type": "GoogleCloudStorageReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": {
										"value": "@{variables('start_date')}",
										"type": "Expression"
									},
									"modifiedDatetimeEnd": {
										"value": "@{variables('end_date')}",
										"type": "Expression"
									}
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							}
						}
					]
				}
			},
			{
				"name": "ForEach_copy",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "If Condition1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('list_csv_files_initial_copy').output.childItems",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "download_files",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "GoogleCloudStorageReadSettings",
										"recursive": true,
										"modifiedDatetimeStart": {
											"value": "@{variables('start_date')}",
											"type": "Expression"
										},
										"modifiedDatetimeEnd": {
											"value": "@{variables('end_date')}",
											"type": "Expression"
										},
										"wildcardFileName": {
											"value": "@{item().name}",
											"type": "Expression"
										}
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "ds_audi_gcs_s3_src",
									"type": "DatasetReference",
									"parameters": {
										"container": "gdfp-7326",
										"fileName": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_audi_azure_blob_snk",
									"type": "DatasetReference",
									"parameters": {
										"directoryName": "raw_dfp_lnd/landing"
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "pl_gcs_s3_dfp_loading",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ForEach_copy",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_gcs_s3_dfp_loading",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"filename": {
							"value": "@pipeline().parameters.filename",
							"type": "Expression"
						}
					}
				}
			}
		],
		"parameters": {
			"filename": {
				"type": "string"
			}
		},
		"variables": {
			"start_date": {
				"type": "String"
			},
			"end_date": {
				"type": "String"
			},
			"file_count": {
				"type": "String"
			},
			"filedate": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2021-05-19T03:49:14Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}